plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def getProperties(String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty(key)
}

def getLocalProperties(String key) {
    Properties properties = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists()) {
        properties.load(file.newDataInputStream())
        return properties.getProperty(key)
    } else {
        return ""
    }
}

def getSystemOrLocalProperty(String propertyKey, String defaultLocalPropertyKey = "") {
    return System.getenv(propertyKey) ?: getLocalProperties(defaultLocalPropertyKey == "" ? propertyKey : defaultLocalPropertyKey)
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.ci.cd"
        minSdk 26
        targetSdk 32
        versionCode 4
        versionName "4.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(getSystemOrLocalProperty("STOREFILE"))
            storePassword getSystemOrLocalProperty("STOREPASSWORD")
            keyAlias getSystemOrLocalProperty("KEYALIAS")
            keyPassword getSystemOrLocalProperty("KEYPASSWORD")
        }
        release {
            storeFile file(getSystemOrLocalProperty("STOREFILE"))
            storePassword getSystemOrLocalProperty("STOREPASSWORD")
            keyAlias getSystemOrLocalProperty("KEYALIAS")
            keyPassword getSystemOrLocalProperty("KEYPASSWORD")
        }
    }

    variantFilter { variant ->
        if (variant.name == "prodDebug") {
            setIgnore(true)
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
        }
        prod {
            dimension "default"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}